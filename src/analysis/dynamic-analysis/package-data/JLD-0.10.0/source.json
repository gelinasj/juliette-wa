{
  "eval_info": {
    "call_count": 199,
    "stack_traces": [
      {
        "count": 66,
        "last_call": [
          "julia_type(::Expr) at JLD.jl:1009",
          "_julia_type(::String) at JLD.jl:997",
          "julia_type(::String) at JLD.jl:27",
          "jldatatype(::JLD.JldFile, ::HDF5Datatype) at jld_types.jl:695"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "curly [fun (gen)]": 30
            },
            {
              "variable [fun (gen)]": 36
            }
          ]
        }
      },
      {
        "count": 32,
        "last_call": [
          "eval at JLD.jl:1 [inlined]",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::Int64) at JLD.jl:1065",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::DataType) at JLD.jl:1106",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::DataType) at JLD.jl:1106"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "value [fun (gen)]": 32
            }
          ]
        }
      },
      {
        "count": 29,
        "last_call": [
          "eval at JLD.jl:1 [inlined]",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::Int64) at JLD.jl:1065",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::DataType) at JLD.jl:1106",
          "full_typename(::JLD.JldFile, ::Type{T} where T) at JLD.jl:1116"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "value [fun (gen)]": 29
            }
          ]
        }
      },
      {
        "count": 28,
        "last_call": [
          "eval at JLD.jl:1 [inlined]",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::Int64) at JLD.jl:1065",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::DataType) at JLD.jl:1103",
          "full_typename(::JLD.JldFile, ::Type{T} where T) at JLD.jl:1116"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "value [fun (gen)]": 24
            },
            {
              "other [fun (gen)]": 4
            }
          ]
        }
      },
      {
        "count": 15,
        "last_call": [
          "julia_type(::Expr) at JLD.jl:1009",
          "_julia_type(::String) at JLD.jl:997",
          "julia_type(::String) at JLD.jl:27",
          "refarray_eltype(::JLD.JldDataset) at JLD.jl:494"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "curly [fun (gen)]": 6
            },
            {
              "other [fun (gen)]": 4
            },
            {
              "variable [fun (gen)]": 5
            }
          ]
        }
      },
      {
        "count": 12,
        "last_call": [
          "eval at JLD.jl:1 [inlined]",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::Int64) at JLD.jl:1065",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::DataType) at JLD.jl:1106",
          "full_typename(::Base.GenericIOBuffer{Array{UInt8,1}}, ::JLD.JldFile, ::UnionAll) at JLD.jl:1037"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "value [fun (gen)]": 12
            }
          ]
        }
      },
      {
        "count": 6,
        "last_call": [
          "reconstruct_type(::JLD.JldFile, ::HDF5Datatype, ::String) at jld_types.jl:781",
          "jldatatype(::JLD.JldFile, ::HDF5Datatype) at jld_types.jl:698",
          "read(::JLD.JldDataset) at JLD.jl:367",
          "read(::JLD.JldFile, ::String) at JLD.jl:343"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "struct [fun]": 6
            },
            {
              "variable [fun]": 6
            }
          ]
        }
      },
      {
        "count": 3,
        "last_call": [
          "julia_type(::Expr) at JLD.jl:1009",
          "_julia_type(::String) at JLD.jl:997",
          "julia_type at JLD.jl:27 [inlined]",
          "jlconvert(::Type{Type}, ::JLD.JldFile, ::Ptr{UInt8}) at jld_types.jl:248"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "curly [fun (gen)]": 1
            },
            {
              "variable [fun (gen)]": 2
            }
          ]
        }
      },
      {
        "count": 2,
        "last_call": [
          "reconstruct_type(::JLD.JldFile, ::HDF5Datatype, ::String) at jld_types.jl:743",
          "jldatatype(::JLD.JldFile, ::HDF5Datatype) at jld_types.jl:698",
          "read(::JLD.JldDataset) at JLD.jl:367",
          "read(::JLD.JldFile, ::String) at JLD.jl:343"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "struct [fun]": 2
            },
            {
              "variable [fun]": 2
            }
          ]
        }
      },
      {
        "count": 2,
        "last_call": [
          "reconstruct_type(::JLD.JldFile, ::HDF5Datatype, ::String) at jld_types.jl:746",
          "jldatatype(::JLD.JldFile, ::HDF5Datatype) at jld_types.jl:698",
          "read(::JLD.JldDataset) at JLD.jl:367",
          "read(::JLD.JldFile, ::String) at JLD.jl:343"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "variable [fun]": 2
            },
            {
              "other [fun]": 2
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "top-level scope at jldtests.jl:154",
          "include(::String) at client.jl:457",
          "runtest(::String) at runtests.jl:3",
          "top-level scope at runtests.jl:5"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "struct [top (gen)]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "top-level scope at jldtests.jl:938",
          "include(::String) at client.jl:457",
          "runtest(::String) at runtests.jl:3",
          "top-level scope at runtests.jl:5"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "macrocall [top (gen)]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "top-level scope at jldtests.jl:919",
          "include(::String) at client.jl:457",
          "runtest(::String) at runtests.jl:3",
          "top-level scope at runtests.jl:5"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "function [top]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "jldopen(::String, ::Bool, ::Bool, ::Bool, ::Bool, ::Bool; mmaparrays::Bool, compatible::Bool, compress::Bool) at JLD.jl:211",
          "jldopen at JLD.jl:148 [inlined]",
          "jldopen(::String, ::String; mmaparrays::Bool, compatible::Bool, compress::Bool) at JLD.jl:231",
          "jldopen at JLD.jl:231 [inlined]"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "useimport [fun (gen)]": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [],
      "func_def_types": {
        "newFuncCount": 0,
        "bodylessFuncCount": 0,
        "funcRedefCount": 0,
        "miscCount": 0
      },
      "func_def_ast_forms": "[[{\"astHead\":\"struct\",\"context\":{\"inFunDef\":true,\"inQuote\":true}},16],[{\"astHead\":\"variable\",\"context\":{\"inFunDef\":true,\"inQuote\":true}},20],[{\"astHead\":\"struct\",\"context\":{\"inFunDef\":false,\"inQuote\":false}},2],[{\"astHead\":\"variable\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},86],[{\"astHead\":\"other\",\"context\":{\"inFunDef\":true,\"inQuote\":true}},4],[{\"astHead\":\"function\",\"context\":{\"inFunDef\":false,\"inQuote\":true}},2],[{\"astHead\":\"value\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},194],[{\"astHead\":\"useimport\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},2],[{\"astHead\":\"curly\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},74],[{\"astHead\":\"other\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},16],[{\"astHead\":\"macrocall\",\"context\":{\"inFunDef\":false,\"inQuote\":false}},2]]"
    }
  },
  "invokelatest_info": {
    "call_count": 0,
    "stack_traces": [],
    "func_specific_data": {
      "function_names": []
    }
  }
}
