{
  "eval_info": {
    "call_count": 33,
    "stack_traces": [
      {
        "count": 20,
        "last_call": "eval(::Expr) at client.jl:467",
        "auxillary": {
          "ast_heads": [
            {
              "-> [top (gen)]": 15
            },
            {
              "value [top (gen)]": 5
            }
          ]
        }
      },
      {
        "count": 13,
        "last_call": "(::Distributed.var\"#155#156\"{Module,Expr})() at task.jl:356",
        "auxillary": {
          "ast_heads": [
            {
              "= [top (gen)]": 6
            },
            {
              "function [top]": 3
            },
            {
              "useimport [top (gen)]": 1
            },
            {
              "macrocall [top (gen)]": 3
            },
            {
              "useimport [top]": 6
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [],
      "func_def_types": {
        "newFuncCount": 0,
        "bodylessFuncCount": 0,
        "funcRedefCount": 0,
        "miscCount": 0
      },
      "func_def_ast_forms": "[[{\"astHead\":\"function\",\"context\":{\"inFunDef\":true,\"inQuote\":true}},6],[{\"astHead\":\"->\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},30],[{\"astHead\":\"useimport\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},2],[{\"astHead\":\"useimport\",\"context\":{\"inFunDef\":true,\"inQuote\":true}},12],[{\"astHead\":\"value\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},10],[{\"astHead\":\"macrocall\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},6],[{\"astHead\":\"=\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},12]]"
    }
  },
  "invokelatest_info": {
    "call_count": 161,
    "stack_traces": [
      {
        "count": 56,
        "last_call": "send_msg_(::Distributed.Worker, ::Distributed.MsgHeader, ::Distributed.JoinPGRPMsg, ::Bool) at messages.jl:185",
        "auxillary": {
          "function_names": [
            {
              "function_name": "serialize_msg",
              "count": 56
            }
          ]
        }
      },
      {
        "count": 49,
        "last_call": "_tryrequire_from_serialized(::Base.PkgId, ::UInt64, ::String) at loading.jl:715",
        "auxillary": {
          "function_names": [
            {
              "function_name": "loadpkg",
              "count": 36
            },
            {
              "function_name": "_require_callback",
              "count": 13
            }
          ]
        }
      },
      {
        "count": 28,
        "last_call": "(::Distributed.var\"#125#126\"{Distributed.ProcessGroup,Distributed.RRID,typeof(Distributed.def_rv_channel)})() at remotecall.jl:175",
        "auxillary": {
          "function_names": [
            {
              "function_name": "def_rv_channel",
              "count": 28
            }
          ]
        }
      },
      {
        "count": 25,
        "last_call": "message_handler_loop(::Sockets.TCPSocket, ::Sockets.TCPSocket, ::Bool) at process_messages.jl:185",
        "auxillary": {
          "function_names": [
            {
              "function_name": "deserialize_msg",
              "count": 25
            }
          ]
        }
      },
      {
        "count": 3,
        "last_call": "require(::Base.PkgId) at loading.jl:931",
        "auxillary": {
          "function_names": [
            {
              "function_name": "loadpkg",
              "count": 2
            },
            {
              "function_name": "_require_callback",
              "count": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "function_names": [
        {
          "function_name": "serialize_msg",
          "count": 56
        },
        {
          "function_name": "loadpkg",
          "count": 38
        },
        {
          "function_name": "def_rv_channel",
          "count": 28
        },
        {
          "function_name": "deserialize_msg",
          "count": 25
        },
        {
          "function_name": "_require_callback",
          "count": 14
        }
      ]
    }
  }
}
