{
  "eval_info": {
    "call_count": 3,
    "stack_traces": [
      {
        "count": 1,
        "last_call": [
          "initmeta(::Module) at Docs.jl:79",
          "doc!(::Module, ::Base.Docs.Binding, ::Base.Docs.DocStr, ::Any) at Docs.jl:221",
          "top-level scope at data.jl:27",
          "include(::String) at client.jl:457"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "const [fun (gen)]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "eval(::Module, ::Expr) at Base.jl:39",
          "reprpkgids(::Array{Base.PkgId,1}) at ambiguities.jl:128",
          "_test_ambiguities(::Array{Base.PkgId,1}; color::Nothing, exclude::Array{Any,1}, detect_ambiguities_options::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{(),Tuple{}}}) at ambiguities.jl:97",
          "_test_ambiguities at ambiguities.jl:97 [inlined]"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "other [fun (gen)]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "initmeta(::Module) at Docs.jl:79",
          "doc!(::Module, ::Base.Docs.Binding, ::Base.Docs.DocStr, ::Any) at Docs.jl:221",
          "top-level scope at common.jl:9",
          "include(::String) at client.jl:457"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "const [fun (gen)]": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [],
      "func_def_types": {
        "newFuncCount": 0,
        "bodylessFuncCount": 0,
        "funcRedefCount": 0,
        "miscCount": 0
      },
      "func_def_ast_forms": "[[{\"astHead\":\"other\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},2],[{\"astHead\":\"const\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},4]]"
    }
  },
  "invokelatest_info": {
    "call_count": 2,
    "stack_traces": [
      {
        "count": 1,
        "last_call": [
          "show_backtrace(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:655",
          "showerror(::Base.GenericIOBuffer{Array{UInt8,1}}, ::InfrastructureSystems.DataFormatError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}; backtrace::Bool) at errorshow.jl:93",
          "(::Base.var\"#showerror##kw\")(::NamedTuple{(:backtrace,),Tuple{Bool}}, ::typeof(showerror), ::Base.GenericIOBuffer{Array{UInt8,1}}, ::InfrastructureSystems.DataFormatError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:88",
          "showerror(::Base.GenericIOBuffer{Array{UInt8,1}}, ::LoadError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}; backtrace::Bool) at errorshow.jl:99"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "identity",
              "count": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "show_backtrace(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:655",
          "showerror(::Base.GenericIOBuffer{Array{UInt8,1}}, ::InfrastructureSystems.DataFormatError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}; backtrace::Bool) at errorshow.jl:93",
          "(::Base.var\"#showerror##kw\")(::NamedTuple{(:backtrace,),Tuple{Bool}}, ::typeof(showerror), ::Base.GenericIOBuffer{Array{UInt8,1}}, ::InfrastructureSystems.DataFormatError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:88",
          "show_exception_stack(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{Any,1}) at errorshow.jl:737"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "identity",
              "count": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "function_names": [
        {
          "function_name": "identity",
          "count": 2
        }
      ]
    }
  }
}
