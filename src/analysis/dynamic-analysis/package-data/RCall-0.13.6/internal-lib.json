{
  "eval_info": {
    "call_count": 2,
    "stack_traces": [
      {
        "count": 2,
        "last_call": [
          "eval_user_input(::Any, ::REPL.REPLBackend) at REPL.jl:134",
          "repl_backend_loop(::REPL.REPLBackend) at REPL.jl:195",
          "start_repl_backend(::REPL.REPLBackend, ::Any) at REPL.jl:180",
          "run_repl(::AbstractREPL, ::Any; backend_on_current_task::Bool) at REPL.jl:292"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "other [fun (gen)]": 2
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [],
      "func_def_types": {
        "newFuncCount": 0,
        "bodylessFuncCount": 0,
        "funcRedefCount": 0,
        "miscCount": 0
      },
      "func_def_ast_forms": "[[{\"astHead\":\"other\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},4]]"
    }
  },
  "invokelatest_info": {
    "call_count": 230,
    "stack_traces": [
      {
        "count": 208,
        "last_call": [
          "(::REPL.LineEdit.var\"#22#23\"{REPL.LineEdit.var\"#133#186\",String})(::Any, ::Any) at LineEdit.jl:1364",
          "prompt!(::REPL.Terminals.TextTerminal, ::REPL.LineEdit.ModalInterface, ::REPL.LineEdit.MIState) at LineEdit.jl:2447",
          "run_interface(::REPL.Terminals.TextTerminal, ::REPL.LineEdit.ModalInterface, ::REPL.LineEdit.MIState) at LineEdit.jl:2350",
          "run_frontend(::LineEditREPL, ::REPL.REPLBackendRef) at REPL.jl:1143"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "#133",
              "count": 187
            },
            {
              "function_name": "#110",
              "count": 15
            },
            {
              "function_name": "#109",
              "count": 3
            },
            {
              "function_name": "#7",
              "count": 2
            },
            {
              "function_name": "#55",
              "count": 1
            }
          ]
        }
      },
      {
        "count": 15,
        "last_call": [
          "run_interface(::REPL.Terminals.TextTerminal, ::REPL.LineEdit.ModalInterface, ::REPL.LineEdit.MIState) at LineEdit.jl:2355",
          "run_frontend(::LineEditREPL, ::REPL.REPLBackendRef) at REPL.jl:1143",
          "(::REPL.var\"#38#42\"{LineEditREPL,REPL.REPLBackendRef})() at task.jl:356"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "#4",
              "count": 13
            },
            {
              "function_name": "do_respond",
              "count": 2
            }
          ]
        }
      },
      {
        "count": 2,
        "last_call": [
          "eval_user_input(::Any, ::REPL.REPLBackend) at REPL.jl:132",
          "repl_backend_loop(::REPL.REPLBackend) at REPL.jl:195",
          "start_repl_backend(::REPL.REPLBackend, ::Any) at REPL.jl:180",
          "run_repl(::AbstractREPL, ::Any; backend_on_current_task::Bool) at REPL.jl:292"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "softscope",
              "count": 2
            }
          ]
        }
      },
      {
        "count": 2,
        "last_call": [
          "(::REPL.var\"#do_respond#54\"{Bool,Bool,REPL.var\"#64#73\"{LineEditREPL,REPL.REPLHistoryProvider},LineEditREPL,REPL.LineEdit.Prompt})(::Any, ::Any, ::Any) at REPL.jl:816",
          "invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at function-override.jl:156",
          "invokelatest at function-override.jl:144 [inlined]",
          "run_interface(::REPL.Terminals.TextTerminal, ::REPL.LineEdit.ModalInterface, ::REPL.LineEdit.MIState) at LineEdit.jl:2355"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "#64",
              "count": 2
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "_tryrequire_from_serialized(::Base.PkgId, ::UInt64, ::String) at loading.jl:715",
          "_require_search_from_serialized(::Base.PkgId, ::String) at loading.jl:771",
          "_require(::Base.PkgId) at loading.jl:1007",
          "require(::Base.PkgId) at loading.jl:928"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "loadpkg",
              "count": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "require(::Base.PkgId) at loading.jl:931",
          "require(::Module, ::Symbol) at loading.jl:923",
          "include(::String) at client.jl:457",
          "top-level scope at none:12"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "loadpkg",
              "count": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "print_response(::IO, ::Any, ::Bool, ::Bool, ::Any) at REPL.jl:238",
          "print_response(::AbstractREPL, ::Any, ::Bool, ::Bool) at REPL.jl:223",
          "(::REPL.var\"#do_respond#54\"{Bool,Bool,REPL.var\"#64#73\"{LineEditREPL,REPL.REPLHistoryProvider},LineEditREPL,REPL.LineEdit.Prompt})(::Any, ::Any, ::Any) at REPL.jl:822",
          "invokelatest(::Any, ::Any, ::Vararg{Any,N} where N; kwargs::Base.Iterators.Pairs{Union{},Union{},Tuple{},NamedTuple{,Tuple{}}}) at function-override.jl:156"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "display",
              "count": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "function_names": [
        {
          "function_name": "#133",
          "count": 187
        },
        {
          "function_name": "#110",
          "count": 15
        },
        {
          "function_name": "#4",
          "count": 13
        },
        {
          "function_name": "#109",
          "count": 3
        },
        {
          "function_name": "loadpkg",
          "count": 2
        },
        {
          "function_name": "do_respond",
          "count": 2
        },
        {
          "function_name": "#64",
          "count": 2
        },
        {
          "function_name": "softscope",
          "count": 2
        },
        {
          "function_name": "#7",
          "count": 2
        },
        {
          "function_name": "display",
          "count": 1
        },
        {
          "function_name": "#55",
          "count": 1
        }
      ]
    }
  }
}
