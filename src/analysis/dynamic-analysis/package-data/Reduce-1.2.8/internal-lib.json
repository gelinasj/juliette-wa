{
  "eval_info": {
    "call_count": 2,
    "stack_traces": [
      {
        "count": 1,
        "last_call": [
          "eval(::Expr) at client.jl:467",
          "top-level scope at runtests.jl:3",
          "include(::String) at client.jl:457",
          "top-level scope at none:12"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "other [fun (gen)]": 1
            }
          ]
        }
      },
      {
        "count": 1,
        "last_call": [
          "eval(::Expr) at client.jl:467",
          "|>(::Expr, ::typeof(eval)) at operators.jl:834",
          "top-level scope at runtests.jl:26",
          "include(::String) at client.jl:457"
        ],
        "auxillary": {
          "ast_heads": [
            {
              "macrocall [fun (gen)]": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [],
      "func_def_types": {
        "newFuncCount": 0,
        "bodylessFuncCount": 0,
        "funcRedefCount": 0,
        "miscCount": 0
      },
      "func_def_ast_forms": "[[{\"astHead\":\"macrocall\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},2],[{\"astHead\":\"other\",\"context\":{\"inFunDef\":true,\"inQuote\":false}},2]]"
    }
  },
  "invokelatest_info": {
    "call_count": 1,
    "stack_traces": [
      {
        "count": 1,
        "last_call": [
          "show_backtrace(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:655",
          "showerror(::Base.GenericIOBuffer{Array{UInt8,1}}, ::MethodError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}; backtrace::Bool) at errorshow.jl:93",
          "(::Base.var\"#showerror##kw\")(::NamedTuple{(:backtrace,),Tuple{Bool}}, ::typeof(showerror), ::Base.GenericIOBuffer{Array{UInt8,1}}, ::MethodError, ::Array{Union{Ptr{Nothing}, Base.InterpreterIP},1}) at errorshow.jl:88",
          "show_exception_stack(::Base.GenericIOBuffer{Array{UInt8,1}}, ::Array{Any,1}) at errorshow.jl:737"
        ],
        "auxillary": {
          "function_names": [
            {
              "function_name": "identity",
              "count": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "function_names": [
        {
          "function_name": "identity",
          "count": 1
        }
      ]
    }
  }
}
