{
  "eval_info": {
    "call_count": 370,
    "stack_traces": [
      {
        "count": 350,
        "last_call": "eval at Symata.jl:2 [inlined]",
        "auxillary": {
          "ast_heads": [
            {
              "count": 297,
              "ast_head": "Symbol"
            },
            {
              "count": 29,
              "ast_head": "call"
            },
            {
              "count": 15,
              "ast_head": "->"
            },
            {
              "count": 6,
              "ast_head": "macrocall"
            },
            {
              "count": 2,
              "ast_head": "const"
            },
            {
              "count": 1,
              "ast_head": "vect"
            }
          ]
        }
      },
      {
        "count": 12,
        "last_call": "init_sympy() at sympy.jl:858",
        "auxillary": {
          "ast_heads": [
            {
              "count": 12,
              "ast_head": "call"
            }
          ]
        }
      },
      {
        "count": 5,
        "last_call": "populate_rewrite_dict() at sympy.jl:382",
        "auxillary": {
          "ast_heads": [
            {
              "count": 5,
              "ast_head": "block"
            }
          ]
        }
      },
      {
        "count": 3,
        "last_call": "do_Compile(::Mxpr{:Compile}, ::Mxpr{:List}, ::Mxpr{:Power}) at symata_julia_interface.jl:295",
        "auxillary": {
          "ast_heads": [
            {
              "count": 3,
              "ast_head": "function"
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "ast_heads": [
        {
          "count": 297,
          "ast_head": "Symbol"
        },
        {
          "count": 41,
          "ast_head": "call"
        },
        {
          "count": 15,
          "ast_head": "->"
        },
        {
          "count": 6,
          "ast_head": "macrocall"
        },
        {
          "count": 5,
          "ast_head": "block"
        },
        {
          "count": 3,
          "ast_head": "function"
        },
        {
          "count": 2,
          "ast_head": "const"
        },
        {
          "count": 1,
          "ast_head": "vect"
        }
      ]
    }
  },
  "invokelatest_info": {
    "call_count": 243,
    "stack_traces": [
      {
        "count": 112,
        "last_call": "do_GenHead(::Mxpr{Symata.GenHead}, ::Function) at apprules_core.jl:286",
        "auxillary": {
          "function_names": [
            {
              "function_name": "#194",
              "count": 100
            },
            {
              "function_name": "#192",
              "count": 4
            },
            {
              "function_name": "#188",
              "count": 2
            },
            {
              "function_name": "#190",
              "count": 2
            },
            {
              "function_name": "#210",
              "count": 1
            },
            {
              "function_name": "#55",
              "count": 1
            },
            {
              "function_name": "#51",
              "count": 1
            },
            {
              "function_name": "#53",
              "count": 1
            }
          ]
        }
      },
      {
        "count": 103,
        "last_call": "invokelatest at sjcompat.jl:81 [inlined]",
        "auxillary": {
          "function_names": [
            {
              "function_name": "#212",
              "count": 99
            },
            {
              "function_name": "#214",
              "count": 4
            }
          ]
        }
      },
      {
        "count": 23,
        "last_call": "do_Map(::Mxpr{:Map}, ::Function, ::Mxpr{:f}) at expressions.jl:199",
        "auxillary": {
          "function_names": [
            {
              "function_name": "#208",
              "count": 5
            },
            {
              "function_name": "#198",
              "count": 3
            },
            {
              "function_name": "#200",
              "count": 3
            },
            {
              "function_name": "#204",
              "count": 3
            },
            {
              "function_name": "#202",
              "count": 3
            },
            {
              "function_name": "#196",
              "count": 3
            },
            {
              "function_name": "#206",
              "count": 3
            }
          ]
        }
      },
      {
        "count": 3,
        "last_call": "do_Map(::Mxpr{:Map}, ::Function, ::Array{Int64,1}) at expressions.jl:208",
        "auxillary": {
          "function_names": [
            {
              "function_name": "#216",
              "count": 3
            }
          ]
        }
      },
      {
        "count": 2,
        "last_call": "do_Nest(::Mxpr{:Nest}, ::Function, ::Symbol, ::Int64) at lists.jl:163",
        "auxillary": {
          "function_names": [
            {
              "function_name": "#212",
              "count": 1
            },
            {
              "function_name": "#214",
              "count": 1
            }
          ]
        }
      }
    ],
    "func_specific_data": {
      "function_names": [
        {
          "function_name": "#194",
          "count": 100
        },
        {
          "function_name": "#212",
          "count": 100
        },
        {
          "function_name": "#208",
          "count": 5
        },
        {
          "function_name": "#214",
          "count": 5
        },
        {
          "function_name": "#192",
          "count": 4
        },
        {
          "function_name": "#198",
          "count": 3
        },
        {
          "function_name": "#206",
          "count": 3
        },
        {
          "function_name": "#216",
          "count": 3
        },
        {
          "function_name": "#200",
          "count": 3
        },
        {
          "function_name": "#196",
          "count": 3
        },
        {
          "function_name": "#202",
          "count": 3
        },
        {
          "function_name": "#204",
          "count": 3
        },
        {
          "function_name": "#188",
          "count": 2
        },
        {
          "function_name": "#190",
          "count": 2
        },
        {
          "function_name": "#53",
          "count": 1
        },
        {
          "function_name": "#210",
          "count": 1
        },
        {
          "function_name": "#55",
          "count": 1
        },
        {
          "function_name": "#51",
          "count": 1
        }
      ]
    }
  }
}
